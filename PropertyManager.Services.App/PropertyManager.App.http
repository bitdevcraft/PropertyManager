
### Get Weather Forecast
GET {{localhost}}/weatherforecast/
Accept: application/json

### Login System Admin
POST {{localhost}}/api/Auth/login
Accept: application/json
Content-Type: application/json

{
  "username" : "{{user.username}}",
  "password" : "{{user.password}}"
}

> {%
    client.global.set("auth_token", response.body);
    client.log(client.global.get("auth_token"))
%}
### Login System Admin v2
POST {{localhost}}/api/Auth/loginV2
Accept: application/json
Content-Type: application/json

{
  "username" : "{{user.username}}",
  "password" : "{{user.password}}"
}

> {%
    client.global.set("auth_token", response.body);
    client.log(client.global.get("auth_token"))
%}

### Refresh Token 
POST {{localhost}}/api/Auth/refresh-token
Authorization: Bearer {{auth_token}}
Accept: application/json


### Register New User
POST {{localhost}}/api/Auth/register
Accept: application/json
Content-Type: application/json

{
  "username": "ryan1",
  "password": "Administrator1!",
  "email": "ryan@testcom"
}

### Login the new Register
POST {{localhost}}/api/Auth/login
Accept: application/json
Content-Type: application/json

{
  "username": "ryan1",
  "password": "Administrator1!"
}

### Incorrect Password Login
POST {{localhost}}/api/Auth/login
Accept: application/json
Content-Type: application/json

{
  "username": "ryan1",
  "password": "Administrator3!"
}

> {%
    client.assert(response.status == 401);
%}

### Register Duplicate User
POST {{localhost}}/api/Auth/register
Accept: application/json
Content-Type: application/json

{
  "username": "ryan1",
  "password": "Administrator1!",
  "email": "ryan@testcom"
}

> {%
    client.assert(response.status == 400);
%}

### Register Validation Error
POST {{localhost}}/api/Auth/register
Accept: application/json
Content-Type: application/json

{
  "username": "",
  "password": "",
  "email": "ryantestcom"
}

> {%
    client.assert(response.status == 400);
%}
